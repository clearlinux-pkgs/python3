From 64eab161525c0a1172766e1cfd9c52e1d2995d7c Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Wed, 30 Oct 2019 15:46:14 -0700
Subject: [PATCH 3/6] Add avx2 and avx512 support

Enable support for python avx2 and avx512 library creation and
loading.
---
 Lib/distutils/unixccompiler.py | 28 ++++++++++++++++++++++++++++
 Python/dynload_shlib.c         | 15 +++++++++++++++
 2 files changed, 43 insertions(+)

diff --git a/Lib/distutils/unixccompiler.py b/Lib/distutils/unixccompiler.py
index d10a78d..13dc058 100644
--- a/Lib/distutils/unixccompiler.py
+++ b/Lib/distutils/unixccompiler.py
@@ -116,6 +116,16 @@ class UnixCCompiler(CCompiler):
         try:
             self.spawn(compiler_so + cc_args + [src, '-o', obj] +
                        extra_postargs)
+            self.spawn(compiler_so + cc_args+ ["-march=haswell", "-O3",
+                                               "-fno-semantic-interposition",
+                                               "-ffat-lto-objects",
+                                               "-flto=4"] +
+                       [src, '-o', obj + ".avx2"] + extra_postargs)
+            self.spawn(compiler_so + cc_args+ ["-march=skylake-avx512", "-O3",
+                                               "-fno-semantic-interposition",
+                                               "-ffat-lto-objects", "-flto=4",
+                                               "-mprefer-vector-width=512"] +
+                       [src, '-o', obj + ".avx512"] + extra_postargs)
         except DistutilsExecError as msg:
             raise CompileError(msg)
 
@@ -202,6 +212,24 @@ class UnixCCompiler(CCompiler):
                     linker = _osx_support.compiler_fixup(linker, ld_args)
 
                 self.spawn(linker + ld_args)
+                ld_args = ([obj + ".avx2" for obj in objects] + self.objects +
+                       lib_opts + ['-o', output_filename + ".avx2"])
+                if debug:
+                    ld_args[:0] = ['-g']
+                if extra_preargs:
+                    ld_args[:0] = extra_preargs
+                if extra_postargs:
+                    ld_args.extend(extra_postargs)
+                self.spawn(linker + ld_args)
+                ld_args = ([obj + ".avx512" for obj in objects] + self.objects +
+                       lib_opts + ['-o', output_filename + ".avx512"])
+                if debug:
+                    ld_args[:0] = ['-g']
+                if extra_preargs:
+                    ld_args[:0] = extra_preargs
+                if extra_postargs:
+                    ld_args.extend(extra_postargs)
+                self.spawn(linker + ld_args)
             except DistutilsExecError as msg:
                 raise LinkError(msg)
         else:
diff --git a/Python/dynload_shlib.c b/Python/dynload_shlib.c
index c51f97a..0de842f 100644
--- a/Python/dynload_shlib.c
+++ b/Python/dynload_shlib.c
@@ -64,6 +64,8 @@ _PyImport_FindSharedFuncptr(const char *prefix,
     void *handle;
     char funcname[258];
     char pathbuf[260];
+    char *pathname2;
+    char *pathname3;
     int dlopenflags=0;
 
     if (strchr(pathname, '/') == NULL) {
@@ -97,6 +99,19 @@ _PyImport_FindSharedFuncptr(const char *prefix,
     dlopenflags = _PyInterpreterState_Get()->dlopenflags;
 
     handle = dlopen(pathname, dlopenflags);
+    pathname2 = malloc(strlen(pathname) + strlen(".avx2") + 1);
+    sprintf(pathname2, "%s%s", pathname, ".avx2");
+    pathname3 = malloc(strlen(pathname) + strlen(".avx512") + 1);
+    sprintf(pathname3, "%s%s", pathname, ".avx512");
+
+    if (__builtin_cpu_supports("avx512dq") && access(pathname3, R_OK) == 0)
+        handle = dlopen(pathname3, dlopenflags);
+    else if (__builtin_cpu_supports("avx2") && access(pathname2, R_OK) == 0)
+        handle = dlopen(pathname2, dlopenflags);
+    else
+        handle = dlopen(pathname, dlopenflags);
+    free(pathname2);
+    free(pathname3);
 
     if (handle == NULL) {
         PyObject *mod_name;
-- 
2.23.0

